#ifndef UE4SS_SDK_UniversalFunctions_HPP
#define UE4SS_SDK_UniversalFunctions_HPP

class UUniversalFunctions_C : UBlueprintFunctionLibrary
{

    void AddCurrencyObtained(int32 Currency, UObject* __WorldContext, UPlayer_Character_BP_C* Player, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Add_IntInt_ReturnValue, FSave_PlayerStats K2Node_MakeStruct_Save_PlayerStats);
    void AddCurrencySpentCounter(int32 CurrencySpent, UObject* __WorldContext, UPlayer_Character_BP_C* Player, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Add_IntInt_ReturnValue, FSave_PlayerStats K2Node_MakeStruct_Save_PlayerStats);
    void AddDeathCounter(UObject* __WorldContext, UPlayer_Character_BP_C* Player, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Add_IntInt_ReturnValue, FSave_PlayerStats K2Node_MakeStruct_Save_PlayerStats);
    void HaveDLCVoidMaster(UObject* __WorldContext, bool& Result, UGameInstance* CallFunc_GetGameInstance_ReturnValue, UBlueFire_Game_Instance_C* K2Node_DynamicCast_AsBlue_Fire_Game_Instance, bool K2Node_DynamicCast_bSuccess);
    void MoveWidgetToTop(UUserWidget* Widget, UObject* __WorldContext, bool CallFunc_IsRobiValid_ReturnValue);
    void Get Blue Fire Player Controller(UObject* __WorldContext, UPlayerController*& Player Controller, UBlueFire_Game_Instance_C* GameInstance, UGameInstance* CallFunc_GetGameInstance_ReturnValue, UBlueFire_Game_Instance_C* K2Node_DynamicCast_AsBlue_Fire_Game_Instance, bool K2Node_DynamicCast_bSuccess, UPlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_IsRobiValid_ReturnValue);
    void GetAllChunks(UObject* __WorldContext, TArray<uint8>& Chunks);
    void GetBlueFireLanguage(bool Use Default Language, UBlueFire_Game_Instance_C* Game Instance, UObject* __WorldContext, int32& Index, FString& Language, int32 tempIndex);
    void SetDefaultInputOkAndBack(UBlueFire_Game_Instance_C* BlueFireGameInstance, UObject* __WorldContext, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping_1, bool K2Node_SwitchEnum_CmpSuccess, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping_2, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping_3, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping_4, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping_5, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping_6, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping_7, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping_8, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping_9, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping_10, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping_11, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping_12, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping_13, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping_14, UInputSettings* CallFunc_GetInputSettings_ReturnValue, FInputActionKeyMapping K2Node_MakeStruct_InputActionKeyMapping_15, UInputSettings* CallFunc_GetInputSettings_ReturnValue_1);
    void GetAllStreamingLevels(UObject* __WorldContext, TArray<FName>& All Streaming Levels, bool Temp_bool_Variable, bool CallFunc_HaveDLCVoidMaster_Result, FName Temp_name_Variable, FName Temp_name_Variable_1, FName K2Node_Select_Default, TArray<FName>& K2Node_MakeArray_Array);
    void GetAreaFromChunk(uint8 Chunk, UObject* __WorldContext, FString& Area, uint8 Temp_byte_Variable, FString Temp_string_Variable, FString Temp_string_Variable_1, FString Temp_string_Variable_2, FString Temp_string_Variable_3, FString Temp_string_Variable_4, FString Temp_string_Variable_5, FString Temp_string_Variable_6, FString Temp_string_Variable_7, FString Temp_string_Variable_8, FString Temp_string_Variable_9, FString Temp_string_Variable_10, FString Temp_string_Variable_11, FString Temp_string_Variable_12, FString Temp_string_Variable_13, FString Temp_string_Variable_14, FString Temp_string_Variable_15, FString Temp_string_Variable_16, FString Temp_string_Variable_17, FString K2Node_Select_Default);
    void GetChunkFromCheckpoint(uint8 CheckPoint, UObject* __WorldContext, uint8& Chunk, uint8 Temp_byte_Variable, uint8 Temp_byte_Variable_1, uint8 Temp_byte_Variable_2, uint8 Temp_byte_Variable_3, uint8 Temp_byte_Variable_4, uint8 Temp_byte_Variable_5, uint8 Temp_byte_Variable_6, uint8 Temp_byte_Variable_7, uint8 Temp_byte_Variable_8, uint8 Temp_byte_Variable_9, uint8 K2Node_Select_Default);
    void GetLevelsToLoadFromChunk(uint8 Chunk, bool DebugVoidDLC, UObject* __WorldContext, TArray<FName>& All Levels, bool Temp_bool_Variable, bool CallFunc_HaveDLCVoidMaster_Result, FName Temp_name_Variable, FName Temp_name_Variable_1, uint8 Temp_byte_Variable, FName K2Node_Select_Default, TArray<FName>& K2Node_MakeArray_Array, TArray<FName>& K2Node_MakeArray_Array_1, TArray<FName>& K2Node_MakeArray_Array_2, TArray<FName>& K2Node_MakeArray_Array_3, TArray<FName>& K2Node_MakeArray_Array_4, TArray<FName>& K2Node_MakeArray_Array_5, TArray<FName>& K2Node_MakeArray_Array_6, TArray<FName>& K2Node_MakeArray_Array_7, TArray<FName>& K2Node_MakeArray_Array_8, TArray<FName>& K2Node_MakeArray_Array_9, TArray<FName>& K2Node_MakeArray_Array_10, TArray<FName>& K2Node_MakeArray_Array_11, TArray<FName>& K2Node_MakeArray_Array_12, TArray<FName>& K2Node_MakeArray_Array_13, TArray<FName>& K2Node_MakeArray_Array_14, TArray<FName>& K2Node_MakeArray_Array_15, TArray<FName>& K2Node_MakeArray_Array_16, TArray<FName>& K2Node_MakeArray_Array_17, TArray<FName>& K2Node_Select_Default_1);
    void GetVisibleAreasFromCheckpoint(uint8 CheckPoint, UObject* __WorldContext, TArray<FName>& Visible Areas, bool Temp_bool_Variable, bool CallFunc_HaveDLCVoidMaster_Result, FName Temp_name_Variable, FName Temp_name_Variable_1, uint8 Temp_byte_Variable, FName K2Node_Select_Default, TArray<FName>& K2Node_MakeArray_Array, TArray<FName>& K2Node_MakeArray_Array_1, TArray<FName>& K2Node_MakeArray_Array_2, TArray<FName>& K2Node_MakeArray_Array_3, TArray<FName>& K2Node_MakeArray_Array_4, TArray<FName>& K2Node_MakeArray_Array_5, TArray<FName>& K2Node_MakeArray_Array_6, TArray<FName>& K2Node_MakeArray_Array_7, TArray<FName>& K2Node_MakeArray_Array_8, TArray<FName>& K2Node_Select_Default_1);
    void GetChunkName(uint8 Area, UObject* __WorldContext, FText& Name, uint8 Temp_byte_Variable, FText Temp_text_Variable, FText Temp_text_Variable_1, FText Temp_text_Variable_2, FText Temp_text_Variable_3, FText Temp_text_Variable_4, FText Temp_text_Variable_5, FText Temp_text_Variable_6, FText Temp_text_Variable_7, FText Temp_text_Variable_8, FText Temp_text_Variable_9, FText Temp_text_Variable_10, FText Temp_text_Variable_11, FText Temp_text_Variable_12, FText Temp_text_Variable_13, FText Temp_text_Variable_14, FText Temp_text_Variable_15, FText Temp_text_Variable_16, FText Temp_text_Variable_17, FText K2Node_Select_Default);
    void DeleteIDToCheckState(FString ID, bool HiddenSave, UBlueFire_Game_Instance_C* Game Instance, UObject* __WorldContext, UBlueFire_Game_Instance_C* GameInstance, bool Existed, UGameInstance* CallFunc_GetGameInstance_ReturnValue, UBlueFire_Game_Instance_C* K2Node_DynamicCast_AsBlue_Fire_Game_Instance, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_IsRobiValid_ReturnValue);
    void DisableLockHint(bool Disable, UObject* __WorldContext, UPlayer_Character_BP_C* Player, UPlayer_Character_BP_C* CallFunc_GetActorOfClass_ReturnValue, APawn* CallFunc_GetPlayerPawn_ReturnValue, FString CallFunc_Conv_BoolToString_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, FString CallFunc_Concat_StrStr_ReturnValue);
    void GetEmote(const uint8& NewEmote, UObject* __WorldContext, UPlayer_Character_BP_C* Player, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_Contains_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue);
    void IncreaseFireEssence(int32 Amount, UObject* __WorldContext, bool Add, UNewItem_C* CallFunc_GetItemHUD_NewItemHud, bool CallFunc_GetItem_Success, bool CallFunc_GetItem_SpecialPopUp);
    void QuestStatus(uint8 Quest Operation, uint8 Prev Quest, uint8 New Quest, bool Silent, bool Achievement, UObject* __WorldContext, UPlayer_Character_BP_C* Player, int32 Temp_int_Array_Index_Variable, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ByteByte_ReturnValue, FSaveQuest_Struct K2Node_MakeStruct_SaveQuest_Struct, FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_BooleanAND_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, FSaveQuest_Struct CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, FSaveQuest_Struct K2Node_MakeStruct_SaveQuest_Struct_1, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, int32 CallFunc_Array_Add_ReturnValue);
    void GetStatUpgradeClass(UObject* __WorldContext, FPlayerStatsSimple& Movement, FPlayerStatsSimple& Attack, FPlayerStatsSimple& Defense, FPlayerStatsSimple K2Node_MakeStruct_PlayerStatsSimple, FPlayerStatsSimple K2Node_MakeStruct_PlayerStatsSimple_1, FPlayerStatsSimple K2Node_MakeStruct_PlayerStatsSimple_2);
    void GetAreaName(uint8 Area, UObject* __WorldContext, FText& Name);
    void NextLevel(UObject* __WorldContext, bool Add);
    void AddLifeSlot(bool Animate, UObject* __WorldContext, UBlueFire_Game_Instance_C* GameInstance, UPlayer_Character_BP_C* Player, bool Add, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, UGameInstance* CallFunc_GetGameInstance_ReturnValue, UBlueFire_Game_Instance_C* K2Node_DynamicCast_AsBlue_Fire_Game_Instance, bool K2Node_DynamicCast_bSuccess_1, bool Temp_bool_Variable, int32 CallFunc_MakeLiteralInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 K2Node_Select_Default, FSave_PlayerStats K2Node_MakeStruct_Save_PlayerStats);
    void SetItem(uint8 Item, int32 Amount, bool KeyItem, bool IgnoreSpecialPopUp, UPlayer_Character_BP_C* PlayerReference, UObject* __WorldContext, bool& Success, bool& SpecialPopUp, bool PopUp2, bool PopUp, UPlayer_Character_BP_C* Player, bool ItemAlreadyInInventory, APawn* CallFunc_GetPlayerPawn_ReturnValue, bool CallFunc_IsRobiValid_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, FInventory K2Node_MakeStruct_Inventory, FInventory K2Node_MakeStruct_Inventory_1, bool K2Node_SwitchEnum_CmpSuccess, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Array_Index_Variable, bool Temp_bool_True_if_break_was_hit_Variable, FInventory CallFunc_Array_Get_Item, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, FInventory CallFunc_Array_Get_Item_1, bool CallFunc_Array_IsValidIndex_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, FInventory K2Node_MakeStruct_Inventory_2, bool Temp_bool_True_if_break_was_hit_Variable_1, bool CallFunc_Not_PreBool_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Loop_Counter_Variable_2, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 CallFunc_Array_Length_ReturnValue_3, bool Temp_bool_Variable, int32 CallFunc_Array_Length_ReturnValue_4, bool CallFunc_Less_IntInt_ReturnValue_2, bool K2Node_Select_Default, bool CallFunc_BooleanAND_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Array_Index_Variable_2, FInventory CallFunc_Array_Get_Item_2, uint8 CallFunc_Array_Get_Item_3, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, FInventory CallFunc_Array_Get_Item_4, bool CallFunc_Array_IsValidIndex_ReturnValue_1, FInventory K2Node_MakeStruct_Inventory_3, bool Temp_bool_True_if_break_was_hit_Variable_2, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_2);
    void GetCheckPointText(uint8 CheckPoint, UObject* __WorldContext, FText& Text, uint8 Temp_byte_Variable, uint8 Temp_byte_Variable_1, uint8 Temp_byte_Variable_2, uint8 Temp_byte_Variable_3, uint8 Temp_byte_Variable_4, uint8 Temp_byte_Variable_5, uint8 Temp_byte_Variable_6, uint8 Temp_byte_Variable_7, uint8 Temp_byte_Variable_8, uint8 Temp_byte_Variable_9, uint8 K2Node_Select_Default, FText CallFunc_GetChunkName_Name);
    void GetAchievement(uint8 Achievement, UObject* __WorldContext, UPlayer_Character_BP_C* Player, bool AlreadyAdded, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, APawn* CallFunc_GetPlayerPawn_ReturnValue, int32 Temp_int_Array_Index_Variable, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_GetCurrency_Success, int32 CallFunc_Array_Add_ReturnValue, uint8 CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
    void GetSpiritSlot(int32 Amount, UObject* __WorldContext, UBlueFire_Game_Instance_C* GameInstance, bool Add, UGameInstance* CallFunc_GetGameInstance_ReturnValue, UBlueFire_Game_Instance_C* K2Node_DynamicCast_AsBlue_Fire_Game_Instance, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Add_IntInt_ReturnValue, FSave_PlayerStats K2Node_MakeStruct_Save_PlayerStats);
    void GetAsset(uint8 Type, uint8 Weapon, uint8 Tunic, uint8 Amulet, UObject* __WorldContext, bool& Success, int32& Index, int32 CurrentIndex, UBlueFire_Game_Instance_C* GameInstance, bool Add, int32 Temp_int_Array_Index_Variable, UGameInstance* CallFunc_GetGameInstance_ReturnValue, UBlueFire_Game_Instance_C* K2Node_DynamicCast_AsBlue_Fire_Game_Instance, bool K2Node_DynamicCast_bSuccess, FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue_1, FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2, bool K2Node_SwitchEnum_CmpSuccess, FString CallFunc_Concat_StrStr_ReturnValue_2, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable_1, int32 Temp_int_Array_Index_Variable_1, bool CallFunc_Not_PreBool_ReturnValue_1, bool Temp_bool_True_if_break_was_hit_Variable_2, bool CallFunc_Not_PreBool_ReturnValue_2, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_2, uint8 CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, uint8 CallFunc_Array_Get_Item_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_3, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, int32 Temp_int_Loop_Counter_Variable_2, uint8 CallFunc_Array_Get_Item_2, bool CallFunc_EqualEqual_ByteByte_ReturnValue_4, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_2, int32 CallFunc_Array_Add_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_2);
    void HasCurrency(int32 CurrencyValue, bool ReduceIfTrue, bool SoundIfTrue, UObject* __WorldContext, bool& TRUE, UBlueFire_Game_Instance_C* GameInstance, bool Has, UGameInstance* CallFunc_GetGameInstance_ReturnValue, UBlueFire_Game_Instance_C* K2Node_DynamicCast_AsBlue_Fire_Game_Instance, bool K2Node_DynamicCast_bSuccess, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess_1, int32 CallFunc_GetPouchInfo_Current_Limit, int32 CallFunc_GetPouchInfo_Max_Limit, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Clamp_ReturnValue, FSave_PlayerStats K2Node_MakeStruct_Save_PlayerStats);
    void GetUIPlatform(uint8 Action-OLDInput, UBlueFire_Game_Instance_C* BlueFireGameInstance, UObject* __WorldContext, UMaterialInstance*& UIMaterial, bool& NonSquareSize, FVector2D& Size, UMaterialInstance* Image, FString Source, UBlueFire_Game_Instance_C* GameInstance, uint8 Platform, const FName Temp_name_Variable, UGameInstance* CallFunc_GetGameInstance_ReturnValue, UBlueFire_Game_Instance_C* K2Node_DynamicCast_AsBlue_Fire_Game_Instance, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsRobiValid_ReturnValue, const FName Temp_name_Variable_1, const FName Temp_name_Variable_2, const FName Temp_name_Variable_3, const FName Temp_name_Variable_4, const FName Temp_name_Variable_5, const FName Temp_name_Variable_6, const FName Temp_name_Variable_7, const FName Temp_name_Variable_8, const FName Temp_name_Variable_9, const FName Temp_name_Variable_10, const FName Temp_name_Variable_11, const FName Temp_name_Variable_12, const FName Temp_name_Variable_13, const FName Temp_name_Variable_14, const FName Temp_name_Variable_15, const FName Temp_name_Variable_16, const FName Temp_name_Variable_17, const FName Temp_name_Variable_18, const FName Temp_name_Variable_19, const FName Temp_name_Variable_20, const FName Temp_name_Variable_21, const FName Temp_name_Variable_22, const FName Temp_name_Variable_23, const FName Temp_name_Variable_24, const FName Temp_name_Variable_25, const FName Temp_name_Variable_26, const FName Temp_name_Variable_27, const FName Temp_name_Variable_28, const FName Temp_name_Variable_29, const FName Temp_name_Variable_30, const FName Temp_name_Variable_31, const FName Temp_name_Variable_32, const FName Temp_name_Variable_33, const FName Temp_name_Variable_34, const FName Temp_name_Variable_35, const FName Temp_name_Variable_36, const FName Temp_name_Variable_37, const FName Temp_name_Variable_38, const FName Temp_name_Variable_39, const FName Temp_name_Variable_40, const FName Temp_name_Variable_41, const FName Temp_name_Variable_42, const FName Temp_name_Variable_43, const FName Temp_name_Variable_44, const FName Temp_name_Variable_45, const FName Temp_name_Variable_46, bool Temp_bool_Variable, bool Temp_bool_Variable_1, uint8 Temp_byte_Variable, const FName Temp_name_Variable_47, const FName Temp_name_Variable_48, const FName Temp_name_Variable_49, const FName Temp_name_Variable_50, const FName Temp_name_Variable_51, const FName Temp_name_Variable_52, const FName Temp_name_Variable_53, const FName Temp_name_Variable_54, const FName Temp_name_Variable_55, const FName Temp_name_Variable_56, const FName Temp_name_Variable_57, const FName Temp_name_Variable_58, const FName Temp_name_Variable_59, const FName Temp_name_Variable_60, const FName Temp_name_Variable_61, const FName Temp_name_Variable_62, const FName Temp_name_Variable_63, const FName Temp_name_Variable_64, const FName Temp_name_Variable_65, const FName Temp_name_Variable_66, const FName Temp_name_Variable_67, const FName Temp_name_Variable_68, const FName Temp_name_Variable_69, const FName Temp_name_Variable_70, const FName Temp_name_Variable_71, const FName Temp_name_Variable_72, const FName Temp_name_Variable_73, const FName Temp_name_Variable_74, const FName Temp_name_Variable_75, const FName Temp_name_Variable_76, const FName Temp_name_Variable_77, const FName Temp_name_Variable_78, const FName Temp_name_Variable_79, const FName Temp_name_Variable_80, const FName Temp_name_Variable_81, const FName Temp_name_Variable_82, const FName Temp_name_Variable_83, const FName Temp_name_Variable_84, const FName Temp_name_Variable_85, const FName Temp_name_Variable_86, const FName Temp_name_Variable_87, const FName Temp_name_Variable_88, const FName Temp_name_Variable_89, const FName Temp_name_Variable_90, const FName Temp_name_Variable_91, const FName Temp_name_Variable_92, const FName Temp_name_Variable_93, const FName Temp_name_Variable_94, const FName Temp_name_Variable_95, const FName Temp_name_Variable_96, const FName Temp_name_Variable_97, uint8 Temp_byte_Variable_1, const FName K2Node_Select_Default, const FName Temp_name_Variable_98, FString CallFunc_Conv_NameToString_ReturnValue, FString CallFunc_RightChop_ReturnValue, bool CallFunc_StartsWith_ReturnValue, FString CallFunc_Replace_ReturnValue, FName CallFunc_Conv_StringToName_ReturnValue, const FName Temp_name_Variable_99, FPlatformInputInfoStructure CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, const FName Temp_name_Variable_100, UInputSettings* CallFunc_GetInputSettings_ReturnValue, TArray<FInputActionKeyMapping>& CallFunc_GetActionMappingByName_OutMappings, UInputSettings* CallFunc_GetInputSettings_ReturnValue_1, FInputActionKeyMapping CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, const FName Temp_name_Variable_101, FText CallFunc_Key_GetDisplayName_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, uint8 Temp_byte_Variable_2, FString Temp_string_Variable, const FName K2Node_Select_Default_1, bool Temp_bool_Variable_2, FString CallFunc_Conv_NameToString_ReturnValue_1, FString CallFunc_RightChop_ReturnValue_1, FString K2Node_Select_Default_2, bool CallFunc_StartsWith_ReturnValue_1, FString K2Node_Select_Default_3, TArray<FInputActionKeyMapping>& CallFunc_GetActionMappingByName_OutMappings_1, FInputActionKeyMapping CallFunc_Array_Get_Item_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, FText CallFunc_Key_GetDisplayName_ReturnValue_1, FString CallFunc_Conv_TextToString_ReturnValue_1, bool CallFunc_Array_IsValidIndex_ReturnValue_1, uint8 Temp_byte_Variable_3, FString Temp_string_Variable_1, bool Temp_bool_Variable_3, FString K2Node_Select_Default_4, FString K2Node_Select_Default_5, UMaterialInstance* K2Node_Select_Default_6, UMaterialInstance* K2Node_Select_Default_7);
    void HasGodStone(int32 Amount, UObject* __WorldContext, bool& TRUE, UPlayer_Character_BP_C* Player, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
    void GlobalForceFeedback(uint8 Start, UForceFeedbackEffect* ForceFeedbackEffect, UObject* __WorldContext, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess);
    void GlobalEffectCamAttack(UObject* __WorldContext, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess);
    void CromaHit(UObject* __WorldContext, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess);
    void SaveGame(bool HiddenSave, UObject* __WorldContext, UBlueFireSaveGame_C* Save Game, UBlueFire_Game_Instance_C* GameInstance, UAutoSave_C* CallFunc_Create_ReturnValue, TArray<AGlobal_Controller_C*>& CallFunc_GetAllActorsOfClass_OutActors, UGameInstance* CallFunc_GetGameInstance_ReturnValue, AGlobal_Controller_C* CallFunc_Array_Get_Item, UBlueFire_Game_Instance_C* K2Node_DynamicCast_AsBlue_Fire_Game_Instance, bool K2Node_DynamicCast_bSuccess, FDateTime CallFunc_Now_ReturnValue, FDateTime CallFunc_GetDate_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_SaveGameToSlot_ReturnValue, UBlueFireSaveGame_C* CallFunc_CreateSaveGameObject_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1);
    void ChangePCGamePad(UObject* __WorldContext, UPCGamePadUI_C* PCGamePadUI, UPCGamePadUI_C* CallFunc_Create_ReturnValue, UGameInstance* CallFunc_GetGameInstance_ReturnValue, UBlueFire_Game_Instance_C* K2Node_DynamicCast_AsBlue_Fire_Game_Instance, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsRobiValid_ReturnValue);
    void RemoveAbilityRecord(uint8 Ability, UObject* __WorldContext, UPlayer_Character_BP_C* Player, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_1, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_2, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_3, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_4, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_5, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_6, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_7, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_8, bool K2Node_SwitchEnum_CmpSuccess, uint8 Temp_byte_Variable, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_9, FSave_PlayerAbilities K2Node_Select_Default);
    void HasAbility(uint8 Ability, UObject* __WorldContext, bool& Yes, uint8 Temp_byte_Variable, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, bool K2Node_Select_Default);
    void HasItem(uint8 Item, int32 Amount, bool KeyItem, UObject* __WorldContext, bool& Success, int32& ItemAmount, int32 AmountItem, UPlayer_Character_BP_C* Player, bool ItemInInventory, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, bool Temp_bool_True_if_break_was_hit_Variable_1, bool CallFunc_Not_PreBool_ReturnValue_1, FInventory CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Array_Index_Variable_1, FInventory CallFunc_Array_Get_Item_1, bool CallFunc_Array_IsValidIndex_ReturnValue_1, bool CallFunc_GreaterEqual_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_IsRobiValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1);
    void PlayerDistance(const AActor* Actor, float Less Than Distance, UObject* __WorldContext, bool& TRUE, APawn* CallFunc_GetPlayerPawn_ReturnValue, float CallFunc_GetDistanceTo_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue);
    void FreezeEnemies(bool Freeze, bool AlsoFreezeOrUnfreezePlayer, bool OnlyFreezeOrUnfreezePlayer, UObject* __WorldContext, UPlayer_Character_BP_C* Player, int32 Temp_int_Array_Index_Variable, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP_1, bool K2Node_DynamicCast_bSuccess_1, TArray<UEnemy_Character_Parent_C*>& CallFunc_GetAllActorsOfClass_OutActors, TArray<UEnemy_Character_Parent_C*>& CallFunc_GetAllActorsOfClass_OutActors_1, int32 CallFunc_Array_Length_ReturnValue, UEnemy_Character_Parent_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue_1, UAIController* CallFunc_GetAIController_ReturnValue, FVector CallFunc_GetVelocity_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, UEnemy_Character_Parent_C* CallFunc_Array_Get_Item_1, UAIController* CallFunc_GetAIController_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1);
    void NoInventorySpaceHUD(UObject* __WorldContext, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess);
    void DisplayHUDLoot(uint8 Item, int32 Amount, UObject* __WorldContext, bool PopUp2, bool PopUp, UPlayer_Character_BP_C* Player, bool ItemAlreadyInInventory, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, FName CallFunc_Conv_StringToName_ReturnValue, FItem CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);
    void ToLower(FText Text, UObject* __WorldContext, FText& Out, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_ToLower_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);
    void CheckIfActionOK(AActor* SelfRef, UObject* __WorldContext, bool& Success, bool LocalBool, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);
    void AddRemoveAction(AActor* SelfRef, bool Remove, UObject* __WorldContext, bool& Success, bool LocalBool, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue);
    void SetActionCharacter(AActor* SelfRef, bool Remove, UObject* __WorldContext, bool& Success, UPlayer_Character_BP_C* Player, bool AlreadyAdded, bool LocalBool, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, AActor* CallFunc_Array_Get_Item, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_2);
    void GetGodStone(FString Name, FGodStone_Structure GodStoneInfo, UObject* __WorldContext, UPlayer_Character_BP_C* Player, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, FSave_PlayerStats K2Node_MakeStruct_Save_PlayerStats);
    void GetCurrency(int32 CurrencyValue, bool Sound, bool DoubleSpiritAffected, bool ShowInHUD, UObject* __WorldContext, bool& Success, UBlueFire_Game_Instance_C* GameInstance, UPlayer_Character_BP_C* Player, bool Temp_bool_Variable, UNewItem_C* CallFunc_GetItemHUD_NewItemHud, APawn* CallFunc_GetPlayerPawn_ReturnValue, UGameInstance* CallFunc_GetGameInstance_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, UBlueFire_Game_Instance_C* K2Node_DynamicCast_AsBlue_Fire_Game_Instance, bool K2Node_DynamicCast_bSuccess_1, float CallFunc_Multiply_IntFloat_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, bool Temp_bool_Variable_1, bool Temp_bool_Variable_2, int32 CallFunc_GetPouchInfo_Current_Limit, int32 CallFunc_GetPouchInfo_Max_Limit, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 K2Node_Select_Default, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 K2Node_Select_Default_1, int32 K2Node_Select_Default_2, FSave_PlayerStats K2Node_MakeStruct_Save_PlayerStats);
    void PlayerHitLaunch(FVector HitOrigin, float Multiplier XY, float Multiplier Z, UObject* __WorldContext, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess);
    void GetNewAbilityRecord(uint8 Ability, UObject* __WorldContext, UPlayer_Character_BP_C* Player, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_1, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_2, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_3, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_4, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_5, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_6, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_7, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_8, FSave_PlayerAbilities K2Node_MakeStruct_Save_PlayerAbilities_9, FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, FString CallFunc_Concat_StrStr_ReturnValue, uint8 Temp_byte_Variable, FSave_PlayerAbilities K2Node_Select_Default);
    void GetItemHUD(uint8 Item, int32 Amount, bool KeyItem, bool HasPickup, uint8 Type, uint8 Tunic, uint8 Weapon, uint8 Amulet, uint8 Emote, UObject* __WorldContext, UNewItem_C*& NewItemHud, UNewItem_C* NewItem, bool ShowStats, TArray<FItemEffectInfo> StatBoxes, UMaterialInstance* UIMat, FText Name, FText Description, UPlayer_Character_BP_C* Player, bool ItemAlreadyInInventory, bool Temp_bool_Variable, UNewItem_C* CallFunc_Create_ReturnValue, TArray<AActor*>& CallFunc_GetAllActorsWithTag_OutActors, int32 CallFunc_Array_Length_ReturnValue, APawn* CallFunc_GetPlayerPawn_ReturnValue, FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, FName CallFunc_Conv_StringToName_ReturnValue, FST_Emotes CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1, FName CallFunc_Conv_StringToName_ReturnValue_1, FSpiritsInfo CallFunc_GetDataTableRowFromName_OutRow_1, bool CallFunc_GetDataTableRowFromName_ReturnValue_1, FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2, FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3, FName CallFunc_Conv_StringToName_ReturnValue_2, FName CallFunc_Conv_StringToName_ReturnValue_3, FWeaponsInfo CallFunc_GetDataTableRowFromName_OutRow_2, bool CallFunc_GetDataTableRowFromName_ReturnValue_2, FTunicsInfo CallFunc_GetDataTableRowFromName_OutRow_3, bool CallFunc_GetDataTableRowFromName_ReturnValue_3, FItemEffectInfo K2Node_MakeStruct_ItemEffectInfo, FItemEffectInfo K2Node_MakeStruct_ItemEffectInfo_1, TArray<FItemEffectInfo>& K2Node_MakeArray_Array, bool K2Node_SwitchEnum_CmpSuccess, FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4, bool Temp_bool_Variable_1, FName CallFunc_Conv_StringToName_ReturnValue_4, FItem CallFunc_GetDataTableRowFromName_OutRow_4, bool CallFunc_GetDataTableRowFromName_ReturnValue_4, int32 Temp_int_Array_Index_Variable, AActor* CallFunc_Array_Get_Item, bool K2Node_Select_Default, const TArray<UAkAudioEvent*>& K2Node_MakeArray_Array_1, UAkAudioEvent* Temp_object_Variable, UAkAudioEvent* Temp_object_Variable_1, UAkAudioEvent* Temp_object_Variable_2, UAkAudioEvent* Temp_object_Variable_3, UAkAudioEvent* Temp_object_Variable_4, UAkAudioEvent* Temp_object_Variable_5, int32 Temp_int_Loop_Counter_Variable, UAkAudioEvent* Temp_object_Variable_6, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_Variable_2, UAkAudioEvent* Temp_object_Variable_7, UAkAudioEvent* K2Node_Select_Default_1, UAkAudioEvent* Temp_object_Variable_8, uint8 Temp_byte_Variable, UAkAudioEvent* K2Node_Select_Default_2, bool CallFunc_IsRobiValid_ReturnValue, FString CallFunc_GetDisplayName_ReturnValue, int32 CallFunc_PostEventAtLocation_ReturnValue);
    void UseItem(uint8 Item, int32 Amount, bool KeyItem, UPlayer_Character_BP_C* Player Reference, UObject* __WorldContext, bool& Success, int32& CurrentAmount, UPlayer_Character_BP_C* Player, bool ItemAlreadyInInventory, APawn* CallFunc_GetPlayerPawn_ReturnValue, bool CallFunc_IsRobiValid_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Array_Index_Variable, FInventory CallFunc_Array_Get_Item, FInventory CallFunc_Array_Get_Item_1, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, FInventory CallFunc_Array_Get_Item_2, int32 CallFunc_Subtract_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, FInventory K2Node_MakeStruct_Inventory, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable_1, bool Temp_bool_True_if_break_was_hit_Variable_1, bool CallFunc_Not_PreBool_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, FInventory CallFunc_Array_Get_Item_3, FInventory CallFunc_Array_Get_Item_4, bool CallFunc_LessEqual_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, FInventory CallFunc_Array_Get_Item_5, int32 CallFunc_Subtract_IntInt_ReturnValue_1, FInventory K2Node_MakeStruct_Inventory_1, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, bool Temp_bool_Variable, int32 K2Node_Select_Default);
    void GetItem(uint8 Item, int32 Amount, bool KeyItem, bool IgnoreSpecialPopUp, bool IgnoreAnimation, bool ConsumeOldItem, UPlayer_Character_BP_C* PlayerReference, UObject* __WorldContext, bool& Success, bool& SpecialPopUp, bool PopUp2, bool PopUp, UPlayer_Character_BP_C* Player, bool ItemAlreadyInInventory, bool CallFunc_UseItem_Success, int32 CallFunc_UseItem_CurrentAmount, bool CallFunc_UseItem_Success_1, int32 CallFunc_UseItem_CurrentAmount_1, bool CallFunc_UseItem_Success_2, int32 CallFunc_UseItem_CurrentAmount_2, APawn* CallFunc_GetPlayerPawn_ReturnValue, bool CallFunc_IsRobiValid_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, FInventory K2Node_MakeStruct_Inventory, FInventory K2Node_MakeStruct_Inventory_1, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, float CallFunc_PlayAnimMontage_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, FInventory CallFunc_Array_Get_Item, FInventory CallFunc_Array_Get_Item_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, FInventory K2Node_MakeStruct_Inventory_2, bool CallFunc_Array_IsValidIndex_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_3, bool CallFunc_Not_PreBool_ReturnValue_1, FSave_PlayerStats K2Node_MakeStruct_Save_PlayerStats, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue, FInventory CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_4, FInventory K2Node_MakeStruct_Inventory_3, FInventory CallFunc_Array_Get_Item_3, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_4, int32 Temp_int_Loop_Counter_Variable_2, bool Temp_bool_True_if_break_was_hit_Variable_2, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_5, int32 Temp_int_Array_Index_Variable_2, uint8 CallFunc_Array_Get_Item_4, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, bool Temp_bool_Variable, bool K2Node_Select_Default);
    void AddGamePercent(float Percent, FString PercentString, int32 PercentInt, UObject* __WorldContext, TArray<AGlobal_Controller_C*>& CallFunc_GetAllActorsOfClass_OutActors, AGlobal_Controller_C* CallFunc_Array_Get_Item);
    void AddToResetDestroy(AActor* Actor, UObject* __WorldContext, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Add_ReturnValue);
    void CheckStateLoadMenu(FString ID, UBlueFireSaveGame_C* SaveObject, UObject* __WorldContext, bool& Used, bool Existed, bool Temp_bool_True_if_break_was_hit_Variable, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, FString CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
    void [DEPRECATED]Save(bool HiddenSave, AGlobal_Controller_C* Global Controller, bool Show HUD, UObject* __WorldContext, AGlobal_Controller_C* GlobalController, TArray<AGlobal_Controller_C*>& CallFunc_GetAllActorsOfClass_OutActors, AGlobal_Controller_C* CallFunc_Array_Get_Item, bool CallFunc_IsRobiValid_ReturnValue);
    void WriteIDToCheckState(FString ID, bool HiddenSave, UBlueFire_Game_Instance_C* Game Instance, AGlobal_Controller_C* Global Controller, bool Show HUD, UObject* __WorldContext, UBlueFire_Game_Instance_C* GameInstance, bool Existed, UGameInstance* CallFunc_GetGameInstance_ReturnValue, UBlueFire_Game_Instance_C* K2Node_DynamicCast_AsBlue_Fire_Game_Instance, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_Contains_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_IsRobiValid_ReturnValue);
    void CheckState(FString ID, UObject* __WorldContext, FString& Same ID, bool& Used, UBlueFire_Game_Instance_C* GameInstance, bool Existed, UGameInstance* CallFunc_GetGameInstance_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, UBlueFire_Game_Instance_C* K2Node_DynamicCast_AsBlue_Fire_Game_Instance, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, FString CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
    void UseSouls(int32 Currency, UObject* __WorldContext, bool& Has, float CallFunc_Multiply_IntFloat_ReturnValue, APawn* CallFunc_GetPlayerPawn_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
    void GetSouls(int32 Currency, UObject* __WorldContext, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess);
    void ChangeFogColor(bool Revert, FLinearColor NewColor, float PlayRate, UObject* __WorldContext, TArray<AGlobal_Controller_C*>& CallFunc_GetAllActorsOfClass_OutActors, AGlobal_Controller_C* CallFunc_Array_Get_Item);
    void FreezePlayer(bool Unfreeze, UObject* __WorldContext, UPlayer_Character_BP_C* Player, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, UPlayerController* CallFunc_GetPlayerController_ReturnValue);
    void Cutscene(bool Enter, FVector PointA, FVector PointB, bool RotatePlayer, AActor* Cam, uint8 BlendFunc, float BlendTime, bool ShowHUD, bool StopEnemies, bool Affect Timer, bool Lose Spin Charge, UObject* __WorldContext, float& OutputPin, TArray<UEnemy_Character_Parent_C*> Enemies, UPlayer_Character_BP_C* Player, TArray<AActor*>& CallFunc_GetAllActorsWithTag_OutActors, FVector CallFunc_K2_GetActorLocation_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, TArray<AActor*>& CallFunc_GetAllActorsWithTag_OutActors_1, UPlayerController* CallFunc_GetPlayerController_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, UPlayerController* CallFunc_GetPlayerController_ReturnValue_1, APawn* CallFunc_GetPlayerPawn_ReturnValue, UPlayerController* CallFunc_GetPlayerController_ReturnValue_2, APawn* CallFunc_GetPlayerPawn_ReturnValue_1, AActor* CallFunc_GetViewTarget_ReturnValue, UPlayer_Character_BP_C* K2Node_DynamicCast_AsPlayer_Character_BP, bool K2Node_DynamicCast_bSuccess, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_IsRobiValid_ReturnValue, bool CallFunc_EqualEqual_VectorVector_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool Temp_bool_Variable, FVector K2Node_Select_Default, FRotator CallFunc_FindLookAtRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, FRotator CallFunc_MakeRotator_ReturnValue, FRotator CallFunc_MakeRotator_ReturnValue_1, bool CallFunc_K2_SetActorRotation_ReturnValue, int32 Temp_int_Array_Index_Variable, AActor* CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Array_Index_Variable_1, AActor* CallFunc_Array_Get_Item_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_IsRobiValid_ReturnValue_1, bool CallFunc_IsRobiValid_ReturnValue_2, UPlayerController* CallFunc_GetPlayerController_ReturnValue_3);
    void Rotation 180 To 360(float Yaw Input, UObject* __WorldContext, float& 0 - 360, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Percent_FloatFloat_ReturnValue);
}

#endif
