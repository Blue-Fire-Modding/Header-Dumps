#ifndef UE4SS_SDK_HUD_HPP
#define UE4SS_SDK_HUD_HPP

class UHUD_C : public UUserWidget
{
    FPointerToUberGraphFrame UberGraphFrame;
    class UWidgetAnimation* ConsumeItem;
    class UWidgetAnimation* ChangeItemAnim;
    class UWidgetAnimation* FadeHUD;
    class UWidgetAnimation* CollectCurrency;
    class UWidgetAnimation* ChargeSpecialMove;
    class UWidgetAnimation* Target;
    class UImage* BBB;
    class UImage* BBT;
    class UTextBlock* CurrencyAmount;
    class UImage* CurrencyGlow;
    class UTextBlock* DeveloperModeTxt;
    class UImage* Dpad;
    class UImage* EquippedItem;
    class UImage* EquippedItemFrame;
    class UTextBlock* HexLeftAmount;
    class UImage* Image_69;
    class UWrapBox* LifeBox;
    class ULifePoint_C* LifePoint;
    class ULifePoint_C* LifePoint_1;
    class ULifePoint_C* LifePoint_2;
    class ULifePoint_C* LifePoint_3;
    class ULifePoint_C* LifePoint_4;
    class ULifePoint_C* LifePoint_5;
    class ULifePoint_C* LifePoint_6;
    class ULifePoint_C* LifePoint_7;
    class ULifePoint_C* LifePoint_8;
    class ULifePoint_C* LifePoint_9;
    class ULifePoint_C* LifePoint_10;
    class ULifePoint_C* LifePoint_11;
    class ULifePoint_C* LifePoint_12;
    class ULifePoint_C* LifePoint_13;
    class ULifePoint_C* LifePoint_14;
    class ULifePoint_C* LifePoint_15;
    class ULifePoint_C* LifePoint_16;
    class ULifePoint_C* LifePoint_17;
    class ULifePoint_C* LifePoint_74;
    class ULifePoint_C* LifePoint_176;
    class UWrapBox* LootBox;
    class UBorder* MainBorder;
    class UTextBlock* NewCurrency;
    class UImage* RageBar;
    class UWrapBox* SpiritBox;
    class USpiritCharge_C* SpiritCharge;
    class USpiritCharge_C* SpiritCharge_130;
    class USpiritCharge_C* SpiritCharge_335;
    class USpiritCharge_C* SpiritCharge_441;
    class UVerticalBox* VerticalBox_119;
    float currentvar;
    float target var;
    class APlayer_Character_BP_C* Player;
    class UMaterialInstanceDynamic* LifeMat;
    class UBlueFire_Game_Instance_C* GameInstance;
    int32 DisplayedCurrency;
    int32 SetCurrency;
    float SetCurrencyFloat;
    class UMaterialInstanceDynamic* AimTimeMat;
    bool Hidden;
    class UMaterialInstanceDynamic* AimInsideMat;
    class UMaterialInstanceDynamic* AimMatExterior;
    float RagePercent;
    class UMaterialInstanceDynamic* RageBarMat;
    float LifePercent;
    float LifeLerpPercent;
    float RageLerpPercent;
    int32 TempHealth;
    bool Animate;
    TArray<class ULifePoint_C*> LifeSlots;
    bool LifeReduce;
    int32 PreviousHealth;
    bool AddLife;
    bool HidePermanent;
    bool TempSpiritNotAdded;
    TArray<class UWidget*> ChildrenSpiritCache;

    float Get_Rage_Percent_0();
    void UpdateSpiritWrap();
    void UpdateLifeHud(bool Animate, bool ChangeSlotCount, bool AddLife);
    void HealthSlotsRun(bool FirstRun);
    void UpdateSlotCount();
    void UpdateManaOnly();
    void AddLoot(FText Name, class UMaterialInterface* Image, FText Description, int32 Value);
    void Construct();
    void TargetOn();
    void TargetOff();
    void RecieveHit(bool Anim);
    void LoadItems();
    void UpdateCurrency(int32 Add, bool Sound, bool Negative, bool Max Limit);
    void UpdateCurrencyLatest();
    void HideHUD();
    void ShowHUD();
    void LoadCurrency(int32 Currency);
    void SilentUpdateCurrency(int32 Currency);
    void HexGreyed();
    void HexActive();
    void UpdateRage(float InPercent, float Rage);
    void UpdateItems(bool ChangeAnim);
    void ItemUpdate(int32 Offset, class UImage* ItemImage, class UTextBlock* AmountText, class UWidget* Frame);
    void ChangeItemUse();
    void ConsumeItemPlay();
    void Change Color Currency(bool Limit);
    void Hide PermanenteHUD();
    void Tick(FGeometry MyGeometry, float InDeltaTime);
    void Reset Displayed Currency();
    void ExecuteUbergraph_HUD(int32 EntryPoint);
};

#endif
